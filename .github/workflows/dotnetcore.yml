name: .NET Core

on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  PROJECT_NAME: FluentValidationLister.Filter
  
  TESTS_NAME: FluentValidationLister.Tests

  GITHUB_FEED: https://nuget.pkg.github.com/scandal-uk/

  GITHUB_USER: scandal-uk

  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'

    - name: Restore project
      run: dotnet restore $PROJECT_NAME/$PROJECT_NAME.csproj

    - name: Restore tests
      run: dotnet restore $TESTS_NAME/$TESTS_NAME.csproj

    - name: Build project
      run: dotnet build $PROJECT_NAME/$PROJECT_NAME.csproj --no-restore --configuration Release

    - name: Build tests
      run: dotnet build $TESTS_NAME/$TESTS_NAME.csproj --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-restore --no-build --configuration Release

    - name: Pack project
      run: dotnet pack -v normal --c Release --include-symbols --include-source --no-build --no-restore -p:PackageVersion=$GITHUB_RUN_ID $PROJECT_NAME/$PROJECT_NAME.csproj

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./${{ env.PROJECT_NAME }}/bin/Release/*.*nupkg

  prerelease:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: nupkg

    - name: Push to GitHub feed
      run: |
        for f in ./nupkg/*.*nupkg
        do
          curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
        done

  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Create release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg $PROJECT_NAME/$PROJECT_NAME.csproj

      - name: Push to GitHub feed
        run: |
          for f in ./nupkg/*.*nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
